<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAPxSURBVHhe7ZvJrg1RFIYvEgaakd4b8BCaESFEE/EGwgADTcRIO9W8hBgRd8yAGIl+KqKbET0h
        0f1/3bOSk2Ovqt2sW1X3WF/yJbeq9v7VXqr2qapzasJxHMdxHMdxHMdxnE74k6kzIFScGJ0BqQXxAo7g
        BSwkVJDN8DV8BTdxxRBewBFCBWHhZP1Lrhgi1H5GsAXegF+gDMLSYWIKaOlnyLHxyJ8WzsDQP2zpMDxt
        WUQWbyNXDBHqa+lpaAqPPAZ/h4fhCmiJ7Hgsqe1j4JiOQI6R2aZH4k3IUBZvOkgtSGr7FI5CZvN0NoPz
        A0OXV0v2pBYktX0KHCOzP1VLRmg7fAfenvqziNSCpLZPxTxfC2Txbk39mcw5+ANKdsoOD/dhxlloSer+
        NGIeCGRasND0dAOSa4Z5IOBRM3oE5sgMXmJZItlmaIFWc2DfaK2AJXNgn2mtgOOKF7CQ1groc2AkWqDP
        gZGYB/ac3hZwKeSjogeQzxTpfXgKLoF9obUCpsyBuyDvGCRr1I9wB+wDsk9maIGxcyCL9xsy4ypcC+cP
        XAevQW77BbfDJmR/LAxRty2LkkCetnLk8YGlxjHINh/gYq6oQfbHwhB127IoCeScx7488pq4Dtn2ZLXU
        HSXjDaIFxsyBDyH78rRtYj1kW36wdIk23my0wJg5UE7fBdVSPQsh21o/nkpFG282JYHvIfvGFHARZNt3
        1ZKO7E+JdcS0SaIk8B5kX37aNrEBsu3daklH9qfEOmLaJKEFxsyBJyD78lKliUnItserpe7QxpuNFhgz
        By6DbyH781JFg0VjmzeQlz5doo03m9LAbfAnZAYvVfhpyzmR8rSVI49ttsKuKR3vP1gE8jZN7kZCclvM
        XQgJ9c81RN22LLTA2HvhnfA5lBxNtom5Hw71zTVE3bYstMCmOXA2vASl/yN4AK6Gci+8Bh6Ej6G0uwBn
        wa6Q/TAjN/AiZD/+YGcvZEE1uG0flB/3nIddkTtelZxAnrbsw4LE3MYJvF6UInb1eCtnvLVogdocOA++
        gOzDIy+V/ZB9OSfO5YoRZH9KrCOmTRJaoDYH7oFszzmv7rTVmAOfQGbs5ooRZH9KrCOmTRKpgVcg2/MD
        I5dDkBmXq6V2SR1vI6mBzyDb89M2F346M+NptdQuqeNtRAvU5sBvkO35eCoXebT1tVpqF2282WiBTdeB
        M5XWCjiueAELaa2AsffCM43WCuhzYCTyxZD1CzZ9ZBXkWPlLCTP40glD674YHxfkC37TF2342hNDeZPP
        N3lWwnGDY2Lx5Ifv5i8dyi8M/gfNXzYU+L/CQ9vyHY++OO2vuzqO4ziO4ziO4ziO4zhlTEz8BVITIuUQ
        iFD/AAAAAElFTkSuQmCC
</value>
  </data>
</root>