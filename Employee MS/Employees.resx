<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAABGdBTUEAALGPC/xhBQAAA/FJREFUeF7t
        m8muDVEUhi8SBpqR3hvwEJoRIUQT8QbCAANNxEg71byEGBF3zIAYiX4qopsRPSHR/X/ds5KTY6+q3axb
        VfdYX/Ilt6r2/tVeqvapqnNqwnEcx3Ecx3Ecx3GcTviTqTMgVJwYnQGpBfECjuAFLCRUkM3wNXwFN3HF
        EF7AEUIFYeFk/UuuGCLUfkawBd6AX6AMwtJhYgpo6WfIsfHInxbOwNA/bOkwPG1ZRBZvI1cMEepr6Wlo
        Co88Bn+Hh+EKaInseCyp7WPgmI5AjpHZpkfiTchQFm86SC1IavsUjkJm83Q2g/MDQ5dXS/akFiS1fQoc
        I7M/VUtGaDt8B96e+rOI1IKktk/FPF8LZPFuTf2ZzDn4A0p2yg4P92HGWWhJ6v40Yh4IZFqw0PR0A5Jr
        hnkg4FEzegTmyAxeYlki2WZogVZzYN9orYAlc2Cfaa2A44oXsJDWCuhzYCRaoM+BkZgH9pzeFnAp5KOi
        B5DPFOl9eAougX2htQKmzIG7IO8YJGvUj3AH7AOyT2ZogbFzIIv3GzLjKlwL5w9cB69BbvsFt8MmZH8s
        DFG3LYuSQJ62cuTxgaXGMcg2H+BirqhB9sfCEHXbsigJ5JzHvjzymrgO2fZktdQdJeMNogXGzIEPIfvy
        tG1iPWRbfrB0iTbebLTAmDlQTt8F1VI9CyHbWj+eSkUbbzYlge8h+8YUcBFk23fVko7sT4l1xLRJoiTw
        HmRffto2sQGy7d1qSUf2p8Q6YtokoQXGzIEnIPvyUqWJSci2x6ul7tDGm40WGDMHLoNvIfvzUkWDRWOb
        N5CXPl2ijTeb0sBt8CdkBi9V+GnLOZHytJUjj222wq4pHe8/WATyNk3uRkJyW8xdCAn1zzVE3bYstMDY
        e+Gd8DmUHE22ibkfDvXNNUTdtiy0wKY5cDa8BKX/I3gAroZyL7wGHoSPobS7AGfBrpD9MCM38CJkP/5g
        Zy9kQTW4bR+UH/ech12RO16VnECetuzDgsTcxgm8XpQidvV4K2e8tWiB2hw4D76A7MMjL5X9kH05J87l
        ihFkf0qsI6ZNElqgNgfugWzPOa/utNWYA59AZuzmihFkf0qsI6ZNEqmBVyDb8wMjl0OQGZerpXZJHW8j
        qYHPINvz0zYXfjoz42m11C6p421EC9TmwG+Q7fl4Khd5tPW1WmoXbbzZaIFN14EzldYKOK54AQtprYCx
        98IzjdYK6HNgJPLFkPULNn1kFeRY+UsJM/jSCUPrvhgfF+QLftMXbfjaE0N5k883eVbCcYNjYvHkh+/m
        Lx3KLwz+B81fNhT4v8JD2/Idj7447a+7Oo7jOI7jOI7jOI7jOGVMTPwFUhMi5RCIUP8AAAAASUVORK5C
        YII=
</value>
  </data>
</root>